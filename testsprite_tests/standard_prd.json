{
  "meta": {
    "project": "YakRooms",
    "date": "2025-07-30",
    "prepared_by": "AI Assistant"
  },
  "product_overview": "YakRooms is a comprehensive hotel booking and management platform designed to connect travelers with verified hotels while providing robust management tools for hotel administrators. It enables seamless hotel registration, room management, secure booking workflows, and real-time notifications, facilitating an efficient hotel ecosystem.",
  "core_goals": [
    "Create a seamless, secure, and user-friendly hotel booking ecosystem that serves travelers and hotel owners.",
    "Provide robust hotel and room management capabilities with detailed profiles, verification, and search functionality.",
    "Support a secure and flexible authentication system with role-based access control for different user types.",
    "Enable complete booking lifecycle management including availability checking, booking confirmation, cancellation, and passcode verification.",
    "Facilitate staff and user role management to ensure proper administration and operational workflows.",
    "Offer real-time notifications and email communication for timely updates and confirmations.",
    "Deliver analytics and reporting tools to monitor booking statistics, revenue, and hotel performance.",
    "Ensure high performance, scalability, and strong security throughout the platform."
  ],
  "key_features": [
    "Firebase-based authentication system with JWT token management for secure and scalable user authentication.",
    "Hotel registration and verification workflow including document uploads, admin approval, and detailed hotel profiles with amenities and photos.",
    "Advanced hotel search with filters by district, hotel type, price sorting, pagination, and verified hotel listings.",
    "Room management supporting multiple room types, availability tracking, dynamic pricing, and photo galleries.",
    "Comprehensive booking system with real-time availability checks, booking status tracking, passcode generation for check-in, and multi-guest support.",
    "Staff management allowing registration, role assignment, and hotel-specific staff allocation.",
    "Guest review and rating system with moderation and analytics.",
    "Real-time WebSocket and email notification system for booking confirmations and status updates.",
    "Business intelligence features like booking and revenue statistics with detailed reports.",
    "User role management with support for multiple roles including SUPER_ADMIN, HOTEL_ADMIN, MANAGER, STAFF, and GUEST."
  ],
  "user_flow_summary": [
    "Guest users search for hotels by location and type using filters, view hotel and room details, check availability, make bookings, and receive confirmation notifications.",
    "Hotel administrators register hotels with detailed information and required documents, undergo verification by admins, and manage hotel profiles and rooms.",
    "Staff members log in to manage operational tasks, update room availability, handle bookings, and report status changes.",
    "Users authenticate via Firebase, receive JWT tokens, and have role-based access to various system features.",
    "Admins verify hotels and manage user roles through secure administrative workflows.",
    "Guests and staff receive real-time notifications on booking confirmations, cancellations, and other system events via WebSocket and email.",
    "Users can submit and manage reviews and ratings for hotels and rooms, with moderation and reporting features.",
    "Platform administrators review booking and revenue statistics to monitor business health and inform decision-making."
  ],
  "validation_criteria": [
    "Successful Firebase authentication with JWT token issuance and validation.",
    "Hotel registration includes document upload and is verified only after admin approval.",
    "Hotel search results return correct results filtered by district, type, and verified status with pagination.",
    "Room availability checks respond accurately with dynamic pricing reflected in booking calculations.",
    "Booking status updates (confirmed, cancelled, completed) are tracked and result in appropriate notifications and passcode verification.",
    "Staff management operations (create, update, delete) reflect accurately in staff listings and role assignments.",
    "Review system supports creation, update, deletion, and moderation of guest reviews.",
    "Real-time notifications are delivered via WebSocket and email with minimal latency.",
    "APIs respond within 2 seconds under normal load and system supports 1000+ concurrent users.",
    "Security measures including role-based access control, input validation, encryption, and SQL injection prevention are implemented and tested.",
    "Booking statistics and revenue reports match underlying booking data accurately.",
    "System uptime meets or exceeds 99.9% availability standards."
  ],
  "code_summary": {
    "tech_stack": [
      "Java 17",
      "Spring Boot 3.5.3",
      "MySQL 8.0",
      "Hibernate/JPA",
      "Firebase Authentication",
      "JWT",
      "WebSocket",
      "SMTP Email",
      "Maven",
      "MapStruct",
      "Lombok"
    ],
    "features": [
      {
        "name": "Authentication API",
        "description": "Firebase-based authentication system with JWT token management",
        "files": [
          "src/main/java/com/yakrooms/be/controller/AuthController.java",
          "src/main/java/com/yakrooms/be/service/FirebaseService.java",
          "src/main/java/com/yakrooms/be/service/impl/FirebaseServiceImpl.java",
          "src/main/java/com/yakrooms/be/security/JwtUtil.java",
          "src/main/java/com/yakrooms/be/security/JwtFilter.java",
          "src/main/java/com/yakrooms/be/security/FilterConfig.java"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Authentication API",
            "version": "1.0.0"
          },
          "paths": {
            "/auth/firebase": {
              "post": {
                "summary": "Firebase authentication",
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "idToken": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Authentication successful",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/JwtLoginResponse"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Hotel Management API",
        "description": "Complete hotel registration, management, and search functionality",
        "files": [
          "src/main/java/com/yakrooms/be/controller/HotelController.java",
          "src/main/java/com/yakrooms/be/service/HotelService.java",
          "src/main/java/com/yakrooms/be/service/impl/HotelServiceImpl.java",
          "src/main/java/com/yakrooms/be/model/entity/Hotel.java",
          "src/main/java/com/yakrooms/be/repository/HotelRepository.java",
          "src/main/java/com/yakrooms/be/dto/mapper/HotelMapper.java",
          "src/main/java/com/yakrooms/be/dto/request/HotelRequest.java",
          "src/main/java/com/yakrooms/be/dto/response/HotelResponse.java"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Hotel Management API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/hotels/{userId}": {
              "post": {
                "summary": "Create new hotel",
                "parameters": [
                  {
                    "name": "userId",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "integer"
                    }
                  }
                ],
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HotelRequest"
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Hotel created successfully"
                  }
                }
              },
              "get": {
                "summary": "Get hotel by user ID",
                "parameters": [
                  {
                    "name": "userId",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "integer"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Hotel details retrieved"
                  }
                }
              }
            },
            "/api/hotels": {
              "get": {
                "summary": "Get all hotels with pagination",
                "parameters": [
                  {
                    "name": "page",
                    "in": "query",
                    "schema": {
                      "type": "integer",
                      "default": 0
                    }
                  },
                  {
                    "name": "size",
                    "in": "query",
                    "schema": {
                      "type": "integer",
                      "default": 10
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "List of hotels"
                  }
                }
              }
            },
            "/api/hotels/search": {
              "get": {
                "summary": "Search hotels by district and type",
                "parameters": [
                  {
                    "name": "district",
                    "in": "query",
                    "schema": {
                      "type": "string"
                    }
                  },
                  {
                    "name": "hotelType",
                    "in": "query",
                    "schema": {
                      "type": "string"
                    }
                  },
                  {
                    "name": "page",
                    "in": "query",
                    "schema": {
                      "type": "integer",
                      "default": 0
                    }
                  },
                  {
                    "name": "size",
                    "in": "query",
                    "schema": {
                      "type": "integer",
                      "default": 10
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Search results"
                  }
                }
              }
            },
            "/api/hotels/{id}/verify": {
              "post": {
                "summary": "Verify hotel by admin",
                "parameters": [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "integer"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Hotel verified successfully"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Room Management API",
        "description": "Room creation, management, and availability tracking",
        "files": [
          "src/main/java/com/yakrooms/be/controller/RoomController.java",
          "src/main/java/com/yakrooms/be/service/RoomService.java",
          "src/main/java/com/yakrooms/be/service/impl/RoomServiceImpl.java",
          "src/main/java/com/yakrooms/be/model/entity/Room.java",
          "src/main/java/com/yakrooms/be/repository/RoomRepository.java",
          "src/main/java/com/yakrooms/be/dto/mapper/RoomMapper.java",
          "src/main/java/com/yakrooms/be/dto/request/RoomRequest.java",
          "src/main/java/com/yakrooms/be/dto/response/RoomResponse.java"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Room Management API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/rooms": {
              "post": {
                "summary": "Create new room",
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/RoomRequest"
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Room created successfully"
                  }
                }
              },
              "get": {
                "summary": "Get all rooms",
                "responses": {
                  "200": {
                    "description": "List of rooms"
                  }
                }
              }
            },
            "/api/rooms/{id}": {
              "get": {
                "summary": "Get room by ID",
                "parameters": [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "integer"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Room details"
                  }
                }
              },
              "put": {
                "summary": "Update room",
                "parameters": [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "integer"
                    }
                  }
                ],
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/RoomRequest"
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Room updated successfully"
                  }
                }
              },
              "delete": {
                "summary": "Delete room",
                "parameters": [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "integer"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Room deleted successfully"
                  }
                }
              }
            },
            "/api/rooms/hotel/{hotelId}": {
              "get": {
                "summary": "Get rooms by hotel ID",
                "parameters": [
                  {
                    "name": "hotelId",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "integer"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "List of hotel rooms"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Booking Management API",
        "description": "Complete booking lifecycle management with status tracking",
        "files": [
          "src/main/java/com/yakrooms/be/controller/BookingController.java",
          "src/main/java/com/yakrooms/be/service/BookingService.java",
          "src/main/java/com/yakrooms/be/service/impl/BookingServiceImpl.java",
          "src/main/java/com/yakrooms/be/model/entity/Booking.java",
          "src/main/java/com/yakrooms/be/repository/BookingRepository.java",
          "src/main/java/com/yakrooms/be/dto/mapper/BookingMapper.java",
          "src/main/java/com/yakrooms/be/dto/request/BookingRequest.java",
          "src/main/java/com/yakrooms/be/dto/response/BookingResponse.java"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Booking Management API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/bookings": {
              "post": {
                "summary": "Create new booking",
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/BookingRequest"
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Booking created successfully"
                  }
                }
              },
              "get": {
                "summary": "Get all bookings with pagination",
                "parameters": [
                  {
                    "name": "hotelId",
                    "in": "query",
                    "schema": {
                      "type": "integer"
                    }
                  },
                  {
                    "name": "page",
                    "in": "query",
                    "schema": {
                      "type": "integer",
                      "default": 0
                    }
                  },
                  {
                    "name": "size",
                    "in": "query",
                    "schema": {
                      "type": "integer",
                      "default": 10
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "List of bookings"
                  }
                }
              }
            },
            "/api/bookings/{id}": {
              "get": {
                "summary": "Get booking by ID",
                "parameters": [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "integer"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Booking details"
                  }
                }
              }
            },
            "/api/bookings/{id}/cancel": {
              "post": {
                "summary": "Cancel booking",
                "parameters": [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "integer"
                    }
                  },
                  {
                    "name": "userId",
                    "in": "query",
                    "required": true,
                    "schema": {
                      "type": "integer"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Booking cancelled successfully"
                  }
                }
              }
            },
            "/api/bookings/{id}/confirm": {
              "post": {
                "summary": "Confirm booking",
                "parameters": [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "integer"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Booking confirmed successfully"
                  }
                }
              }
            },
            "/api/bookings/availability": {
              "get": {
                "summary": "Check room availability",
                "parameters": [
                  {
                    "name": "roomId",
                    "in": "query",
                    "required": true,
                    "schema": {
                      "type": "integer"
                    }
                  },
                  {
                    "name": "checkIn",
                    "in": "query",
                    "required": true,
                    "schema": {
                      "type": "string",
                      "format": "date"
                    }
                  },
                  {
                    "name": "checkOut",
                    "in": "query",
                    "required": true,
                    "schema": {
                      "type": "string",
                      "format": "date"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Availability status",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            },
            "/api/bookings/user/{userId}": {
              "get": {
                "summary": "Get user bookings",
                "parameters": [
                  {
                    "name": "userId",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "integer"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "User's booking history"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Staff Management API",
        "description": "Staff registration, management, and role assignment",
        "files": [
          "src/main/java/com/yakrooms/be/controller/StaffController.java",
          "src/main/java/com/yakrooms/be/service/StaffService.java",
          "src/main/java/com/yakrooms/be/service/impl/StaffServiceImpl.java",
          "src/main/java/com/yakrooms/be/model/entity/Staff.java",
          "src/main/java/com/yakrooms/be/repository/StaffRepository.java",
          "src/main/java/com/yakrooms/be/dto/StaffRequestDTO.java",
          "src/main/java/com/yakrooms/be/dto/StaffResponseDTO.java"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Staff Management API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/staff": {
              "post": {
                "summary": "Create new staff member",
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/StaffRequestDTO"
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Staff created successfully"
                  }
                }
              },
              "get": {
                "summary": "Get all staff",
                "responses": {
                  "200": {
                    "description": "List of staff members"
                  }
                }
              }
            },
            "/api/staff/{id}": {
              "get": {
                "summary": "Get staff by ID",
                "parameters": [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "integer"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Staff details"
                  }
                }
              },
              "put": {
                "summary": "Update staff",
                "parameters": [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "integer"
                    }
                  }
                ],
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/StaffRequestDTO"
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Staff updated successfully"
                  }
                }
              },
              "delete": {
                "summary": "Delete staff",
                "parameters": [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "integer"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Staff deleted successfully"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Review Management API",
        "description": "Guest review and rating system for hotels and rooms",
        "files": [
          "src/main/java/com/yakrooms/be/controller/ReviewController.java",
          "src/main/java/com/yakrooms/be/service/ReviewService.java",
          "src/main/java/com/yakrooms/be/service/impl/ReviewServiceImpl.java",
          "src/main/java/com/yakrooms/be/model/entity/Review.java",
          "src/main/java/com/yakrooms/be/repository/ReviewRepository.java",
          "src/main/java/com/yakrooms/be/dto/request/ReviewRequest.java",
          "src/main/java/com/yakrooms/be/dto/response/ReviewResponse.java"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Review Management API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/reviews": {
              "post": {
                "summary": "Create new review",
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/ReviewRequest"
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Review created successfully"
                  }
                }
              },
              "get": {
                "summary": "Get all reviews",
                "responses": {
                  "200": {
                    "description": "List of reviews"
                  }
                }
              }
            },
            "/api/reviews/{id}": {
              "get": {
                "summary": "Get review by ID",
                "parameters": [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "integer"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Review details"
                  }
                }
              },
              "put": {
                "summary": "Update review",
                "parameters": [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "integer"
                    }
                  }
                ],
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/ReviewRequest"
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Review updated successfully"
                  }
                }
              },
              "delete": {
                "summary": "Delete review",
                "parameters": [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "integer"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Review deleted successfully"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Notification API",
        "description": "Real-time WebSocket notifications and email notifications",
        "files": [
          "src/main/java/com/yakrooms/be/controller/NotificationController.java",
          "src/main/java/com/yakrooms/be/service/NotificationService.java",
          "src/main/java/com/yakrooms/be/service/impl/NotificationServiceImpl.java",
          "src/main/java/com/yakrooms/be/model/entity/Notification.java",
          "src/main/java/com/yakrooms/be/repository/NotificationRepository.java",
          "src/main/java/com/yakrooms/be/config/WebSocketConfig.java",
          "src/main/java/com/yakrooms/be/service/MailService.java"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Notification API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/notifications": {
              "get": {
                "summary": "Get user notifications",
                "responses": {
                  "200": {
                    "description": "List of notifications"
                  }
                }
              }
            },
            "/api/notifications/{id}": {
              "get": {
                "summary": "Get notification by ID",
                "parameters": [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "integer"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "Notification details"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Booking Statistics API",
        "description": "Analytics and reporting for booking data",
        "files": [
          "src/main/java/com/yakrooms/be/controller/BookingStatisticsController.java",
          "src/main/java/com/yakrooms/be/dto/BookingStatisticsDTO.java",
          "src/main/java/com/yakrooms/be/dto/MonthlyRevenueStatsDTO.java"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Booking Statistics API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/statistics/bookings": {
              "get": {
                "summary": "Get booking statistics",
                "responses": {
                  "200": {
                    "description": "Booking statistics data"
                  }
                }
              }
            },
            "/api/statistics/revenue": {
              "get": {
                "summary": "Get revenue statistics",
                "responses": {
                  "200": {
                    "description": "Revenue statistics data"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Passcode Verification API",
        "description": "Check-in passcode verification system",
        "files": [
          "src/main/java/com/yakrooms/be/controller/PasscodeVerificationController.java",
          "src/main/java/com/yakrooms/be/dto/PasscodeVerificationDTO.java",
          "src/main/java/com/yakrooms/be/util/PasscodeGenerator.java"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Passcode Verification API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/passcode/verify": {
              "post": {
                "summary": "Verify check-in passcode",
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PasscodeVerificationDTO"
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Passcode verification result"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "User Role Management API",
        "description": "User role assignment and management",
        "files": [
          "src/main/java/com/yakrooms/be/controller/UserRoleController.java",
          "src/main/java/com/yakrooms/be/service/UserRoleService.java",
          "src/main/java/com/yakrooms/be/service/impl/UserRoleServiceImpl.java",
          "src/main/java/com/yakrooms/be/model/entity/User.java",
          "src/main/java/com/yakrooms/be/model/enums/Role.java"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "User Role Management API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/users/{userId}/roles": {
              "get": {
                "summary": "Get user roles",
                "parameters": [
                  {
                    "name": "userId",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "integer"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "User roles"
                  }
                }
              },
              "put": {
                "summary": "Update user roles",
                "parameters": [
                  {
                    "name": "userId",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "integer"
                    }
                  }
                ],
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "SUPER_ADMIN",
                            "HOTEL_ADMIN",
                            "MANAGER",
                            "STAFF",
                            "GUEST"
                          ]
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "User roles updated successfully"
                  }
                }
              }
            }
          }
        }
      }
    ]
  }
}
